// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: query.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getWalletByAccount = `-- name: GetWalletByAccount :many
select id, name, balance, accounts_id from wallet where accounts_id = $1
`

func (q *Queries) GetWalletByAccount(ctx context.Context, accountsID pgtype.Int8) ([]Wallet, error) {
	rows, err := q.db.Query(ctx, getWalletByAccount, accountsID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Wallet
	for rows.Next() {
		var i Wallet
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Balance,
			&i.AccountsID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
